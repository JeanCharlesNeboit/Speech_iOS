name: Deploy to App Store Connect

on:
  workflow_dispatch:

env:
  SCHEME: "Speech"
  APPLE_DEVELOPER_REPO_PATH: "AppleDeveloper"
  ARCHIVE_PATH: "archive"

jobs:
  upload:
    name: Deploy
    runs-on: macOS-11
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: recursive
      - name: Checkout AppleDeveloper repository
        uses: actions/checkout@master
        with:
          repository: JeanCharlesNeboit/AppleDeveloper
          token: ${{ secrets.ACCESS_TOKEN }}
          path: ${{ env.APPLE_DEVELOPER_REPO_PATH }}
      - name: Set env from .github.env file
        uses: JeanCharlesNeboit/action-dotenv-to-setenv@main
        with:
          env-file: .github.env
      - name: Decrypt gpg files
        run: ./SwiftyCI/scripts/decrypt_secret.sh ${{ env.GPG_FILES }}
        env:
          PASSPHRASE: ${{ secrets.GPG_SECRET }}
      - name: Xcode select
        if: ${{ env.XCODE != '' }}
        uses: ./SwiftyCI/actions/xcode_select
        with:
          xcode: ${{ env.XCODE }}
      - name: Setup signing
        run: ./SwiftyCI/scripts/setup_signing.sh
        env: 
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      - name: Archive
        uses: ./SwiftyCI/actions/archive
        with:
          scheme: ${{ env.SCHEME }}
          configuration: Beta
          archivePath:  ${{ env.ARCHIVE_PATH }}
          profilesPath: ${{ env.APPLE_DEVELOPER_REPO_PATH }}/profiles
      - name: Exporting .ipa
        if: success()
        uses: ./SwiftyCI/actions/export
        with:
          scheme: ${{ env.SCHEME }}
          export_options_plist: ./SwiftyCI/exportOptionsPlist/app_store.plist
      - name: Upload to App Store Connect
        if: success()
        env:
          APPLEID_USERNAME: ${{ secrets.APPLEID_USERNAME }}
          APPLEID_PASSWORD: ${{ secrets.APPLEID_PASSWORD }}
        run: xcrun altool --upload-app -t ios -f ${{ env.SCHEME }}.ipa -u "$APPLEID_USERNAME" -p "$APPLEID_PASSWORD" --verbose